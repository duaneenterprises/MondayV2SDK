name: Test Monday.com PHP SDK

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: [8.1, 8.2, 8.3, 8.4]
        dependency-version: [prefer-stable]
    
    name: PHP ${{ matrix.php }} - ${{ matrix.dependency-version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install dependencies
      run: composer install --${{ matrix.dependency-version }} --prefer-dist --no-progress
      
    - name: Run PHP syntax check
      run: find src tests -name "*.php" -exec php -l {} \;
      
    - name: Run PHPStan static analysis
      run: php -d memory_limit=512M vendor/bin/phpstan analyse --no-progress
      
    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --standard=PSR12 src tests
      
    - name: Run tests with coverage
      run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Run mutation testing (optional)
      if: matrix.php == '8.4'
      run: vendor/bin/infection --min-msi=80 --min-covered-msi=80
      
  security:
    runs-on: ubuntu-latest
    name: Security Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-dev
      
    - name: Run security audit
      run: composer audit --format=json --working-dir=. | tee audit.json
      
    - name: Upload security audit results
      uses: actions/upload-artifact@v3
      with:
        name: security-audit
        path: audit.json
        
  lint:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: composer install --prefer-dist
      
    - name: Run PHP-CS-Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff
      
    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" src/; then
          echo "Found TODO/FIXME comments in source code"
          exit 1
        fi 